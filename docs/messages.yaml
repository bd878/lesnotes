openapi: "3.0.0"
info:
  title: API Specification for messages service
  description: |
    This API allows sending and reading user texts
    from messages service.
  version: 1.0.0
paths:
# SEND
  /messages/v1/send:
    parameters:
      - $ref: '#/components/parameters/token'
    post:
      summary: Send a message
      description: |
        Send a message in a thread, may contain file_ids or entire file.
        If thread is omit, sends on the root thread
      operationId: sendMessage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/sendForm'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sendOk'
        "4XX":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'

  /messages/v2/send:
    post:
      summary: Send a message public API
      description: |
        Send a message via json api, must contain file_ids,
        entire file is prohibited
      operationId: sendMessageJson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sendJson'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sendOk'
        "4XX":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'
# END SEND

# PUBLISH
  /messages/v1/publish:
    parameters:
      - $ref: '#/components/parameters/messages'
      - $ref: '#/components/parameters/token'
    put:
      summary: Make messages public
      description: |
        Update private field of a messages to make it public
      operationId: publishMessages
      requestBody:
        content:
          application/json:
            schema:
              type: object
              nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publishOk'
        "4XX":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'

  /messages/v2/publish:
    put:
      summary: Make messages public
      description: |
        Update private field of a messages to make it public
      operationId: publishMessagesJson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/publishJson'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publishOk'
        "4XX":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'
# END PUBLISH

# PRIVATE
  /messages/v1/private:
    parameters:
      - $ref: '#/components/parameters/messages'
      - $ref: '#/components/parameters/token'
    put:
      summary: Make messages private
      description: |
        Update private field of a messages to make it private
      operationId: privateMessages
      requestBody:
        content:
          application/json:
            schema:
              type: object
              nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/privateOk'
        "4XX":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'

  /messages/v2/private:
    put:
      summary: Make message private public API
      description: |
        Update private field of a message or messages to make it private
      operationId: privateMessageOrMessagesJson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/privateJson'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/privateOk'
        "4XX":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'
# END PRIVATE

# UPDATE
  /messages/v1/update:
    parameters:
      - $ref: '#/components/parameters/token'
    put:
      summary: Update a message
      description: |
        Update a message text, title, name or file
      operationId: updateMessage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/updateForm'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateOk'
        "4XX":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'

  /messages/v2/update:
    put:
      summary: Update a message
      description: |
        Update a message text, title, name or file
      operationId: updateMessageJson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateJson'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateOk'
        "4XX":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'
# END UPDATE

# DELETE
  /messages/v1/delete:
    parameters:
      - $ref: '#/components/parameters/messages'
      - $ref: '#/components/parameters/token'
    delete:
      operationId: deleteMessages
      summary: Delete messages
      description: |
        Deletes a user's messages and attached files.
        Thread messages becomes root thread messages, i.e. thread_id = 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteOk'
        "4XX":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'

  /messages/v2/delete:
    delete:
      operationId: deleteMessagesJson
      summary: Delete a messages
      description: |
        Deletes a user's message and attached file.
        Thread messages becomes root thread messages, i.e. thread_id = 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteJson'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteOk'
        "4XX":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'
# END DELETE

# READ
  /messages/v1/read:
    parameters:
      - $ref: '#/components/parameters/token'
      - $ref: '#/components/parameters/message'
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/thread'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/asc'
      - $ref: '#/components/parameters/messages'
    get:
      summary: Get user messages
      description: |
        Read messages for a given user, a single message, or a specific thread,
        or public messages for a user by id or name
      operationId: readMessages
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                - $ref: '#/components/schemas/readOk'
        "4XX":
          description: error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'

  /messages/v2/read:
    post:
      summary: Get user messages or message
      description: |
        Read messages for a given user, a single message, or a specific thread,
        or public messages for a user
      operationId: readMessagesJson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/readJson'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                - $ref: '#/components/schemas/readOk'

        "4XX":
          description: error 
          content:
            application/json:
              schema:
                - $ref: '#/components/schemas/serverError'
# END READ

# READ PATH
  /messages/v1/read_path:
    parameters:
      - $ref: '#/components/parameters/message'
    get:
      summary: Get message path
      description: |
        Read path for given message id, returns a list of message threads
      operationId: readMessagePath
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                - $ref: '#/components/schemas/readPathOk'

        "4XX":
          description: error
          content:
            application/json:
              schema:
                - $ref: '#/components/schemas/serverError'

  /messages/v2/read_path:
    post:
      summary: Get thread messages of a message
      description: |
        Read path for given path id, returns a list of message threads
      operationId: readMessagePathJson
      requestBody:
        content:
          application/json:
            schema:
              - $ref: '#/components/schemas/readPathJson'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                - $ref: '#/components/schemas/readPathOk'

        "4XX":
          description: error
          content:
            application/json:
              schema:
                - $ref: '#/components/schemas/serverError'

# END READ PATH

# STATUS
  /messages/v1/status:
    get:
      operationId: status
      summary: Show server status
      responses:
        "200":
          description: ok
          content:
            text/plain:
              content:
                default: "ok"
# END STATUS

# TODO: delete
  /messages/v1/read_file:
    parameters:
      - $ref: '#/components/parameters/file'
    get:
      operationId: readFile
      summary: Read attached file
      description: |
        Read file attached to message
      responses:
        "2XX":
          description: |
            Success response. Returns an octet stream.
            Content-Type is a mime-type of a given file,
            or application/octet-stream
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

components:
  parameters:
    token:
      name: Cookie
      in: header
      schema:
        type: string
        example: token=AAAAAA
    file:
      name: file
      in: query
      required: true
      schema:
        type: integer
        example: 1
    user:
      name: user
      in: query
      required: false
      schema:
        type: integer
        example: 1
    message:
      name: id
      in: query
      required: false
      schema:
        type: integer
        example: 1
    name:
      name: name
      in: query
      required: false
      schema:
        type: string
        example: "aaa-bbb-ccc"
    messages:
      name: ids
      in: query
      required: false
      schema:
        type: array
        items:
          type: integer
    thread:
      name: thread
      in: query
      required: false
      schema:
        type: integer
        example: 1
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        example: 1
    offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        example: 1
    asc:
      name: asc
      in: query
      required: false
      schema:
        enum: [1, 0]
        type: integer

  schemas:
# ERROR
    serverError:
      type: object
      status:
        type: string
        default: "error"
      error:
        type: object
        properties:
          code:
            type: integer
          explain:
            type: string
# END ERROR

# SEND
    sendForm:
      oneOf:
        - type: object
          properties:
            thread:
              type: integer
              default: 0
            public:
              type: integer
              default: false
            title:
              type: string
              required: false
              default: ""
            text:
              type: string
              default: ""
              required: false
            file_ids:
              type: array
              items:
                type: integer
        - type: object
          properties:
            thread:
              type: integer
              default: 0
            public:
              type: integer
              default: false
            title:
              type: string
              required: false
              default: ""
            text:
              type: string
              default: ""
              required: false
            file:
              type: string
              format: binary
              required: false

    sendJson:
      type: object
      properties:
        token:
          type: string
          default: ""
          required: true
        req:
          type: object
          properties:
            title:
              type: string
              required: false
              default: ""
            text:
              type: string
              default: ""
              required: true
            file_ids:
              type: array
              items:
                type: integer
            private:
              type: boolean
              required: false
              example: 0
            thread:
              type: integer
              required: false

    sendOk:
      type: object
      status:
        type: string
      response:
        type: object
        properties:
          message:
            schema:
              $ref: '#/components/schemas/message'
# END SEND

# READ
    readJson:
      type: object
      properties:
        token:
          type: string
          default: ""
          required: true
        req:
          type: object
          properties:
            user:
              type: integer
              required: false
            ids:
              type: array
              required: false
              items:
                type: integer
            id:
              type: integer
              required: false
            thread:
              type: integer
              required: false
            limit:
              type: integer
              required: false
            offset:
              type: integer
              required: False
            asc:
              type: integer
              required: false
              example: 0

    readOk:
      type: object
      properties:
        status:
          type: string
          default: "ok"
        response:
          type: object
          properties:
            description:
              type: string
              default: ""
            is_last_page:
              type: boolean
            messages:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/message'
# END READ

# READ PATH
    readPathJson:
      type: object
      properties:
        token:
          type: string
          required: true
        req:
          type: object
          properties:
            id:
              type: integer
              required: true

    readPathOk:
      type: object
      properties:
        status:
          type: string
          default: "ok"
        response:
          type: object
          properties:
            path:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/message'

# END READ PATH

# UPDATE
    updateJson:
      type: object
      properties:
        token:
          type: string
          default: ""
          required: true
        req:
          type: object
          properties:
            id:
              type: integer
              example: 1
              required: true
            public:
              type: integer
              example: 1
            title:
              type: string
              required: false
            name:
              type: string
              required: false
            text:
              type: string
              example: "test message"
            file_ids:
              type: string
              example: ""
            thread:
              type: integer
              required: false

    updateForm:
      oneOf:
        type: object
        properties:
          id:
            type: integer
            required: true
          public:
            type: integer
            example: 1
          name:
            type: string
            required: false
          title:
            type: string
            required: false
          text:
            type: string
            example: "test message"
          file_ids:
            type: string
            example: ""
          thread:
            type: integer
            required: false

    updateOk:
      type: object
      properties:
        status:
          type: string 
          default: "ok"
        response:
          type: object
          properties:
            description:
              type: string 
              default: ""
            id:
              type: integer
              example: 1
            update_utc_nano:
              type: integer
              example: 1234566700000000
# END UPDATE

# DELETE
    deleteJson:
      type: object
      properties:
        token:
          type: string
          default: ""
          required: true
        req:
          type: object
          properties:
            ids:
              type: array
              required: false
              items:
                type: integer

    deleteOk:
      type: object
      properties:
        status:
          type: string
          default: "ok"
        response:
          type: object
          properties:
            ids:
              type: array:
              items:
                type: integer
            description:
              type: string

# DELETE JSON

# PUBLISH
    publishOk:
      type: object
      properties:
        status:
          type: string 
          default: "ok"
        response:
          type: object
          properties:
            description:
              type: string 
              default: ""
            ids:
              type: array
              items:
                type: integer

    publishJson:
      type: object
      properties:
        token:
          type: string
          default: ""
          required: true
        req:
          type: object
          properties:
            ids:
              type: array
              required: false
              items:
                type: integer
# END PUBLISH

# PRIVATE
    privateOk:
      type: object
      properties:
        status:
          type: string 
          default: "ok"
        response:
          type: object
          properties:
            description:
              type: string 
              default: ""
            ids:
              type: array
              items:
                type: integer

    privateJson:
      type: object
      properties:
        token:
          type: string
          default: ""
          required: true
        req:
          type: object
          properties:
            ids:
              type: array
              required: false
              items:
                type: integer
# END PRIVATE

    file:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "file"

    message:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        thread:
          type: integer
        count:
          type: integer
        name:
          type: string
        title:
          type: string
        text:
          type: string
        create_utc_nano:
          type: integer
        update_utc_nano:
          type: integer
        private:
          type: boolean
        files:
          type: array
          items:
            schema:
              $ref: '#/components/schemas/file'
