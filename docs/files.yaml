openapi: 3.0.0
info:
  title: API Specification for files service
  description: |
    This API handles files requests.
  version: 1.0.0
paths:
# UPLOAD
  /files/v1/upload:
    security:
      - apiKey: []
    post:
      operationId: uploadFile
      summary: Uploads a file
      description: |
        Uploads a file on server
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadForm'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uploadOk'
        "4XX":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'

  /files/v2/upload:
    parameters:
      token:
        in: query
        type: string
        required: true
      public:
        name: public
        in: query
        required: false
        schema:
          type: integer
          example: 1
    post:
      operationId: uploadFileV2
      summary: Upload a file
      description: |
        Upload a file on server with a token given in path
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadForm'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uploadOk'
        "4XX":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'              
# END UPLOAD

# DOWNLOAD
  /files/v1/download:
    security:
      - apiKey: []
    parameters:
      user_id:
        in: query
        required: true
        type: string
      id:
        in: query
        required: true
        type: string
    get:
      summary: Download a file
      description: |
        Download a file for a provided user
      operationId: downloadFile

  /files/v2/{user_id}/{id}:
    parameters:
      user_id:
        in: path
        type: integer
        required: true
      id:
        in: path
        type: integer
        required: true
        example: 1
    get:
      summary: Download public file
      description: |
        Download public file of a given user
      operationId: downloadPublicFile

  /files/v2/{id}:
    parameters:
      id:
        in: path
        type: integer
        required: true
        example: 1
    get:
      summary: Download public file for public user
      description: |
        Download public file of a public user
      operationId: downloadPublicUserFile
# END DOWNLOAD

# STATUS
  /files/v1/status:
    get:
      operationId: getStatus
      summary: Shows server status
      responses:
        "200":
          description: ok
          content:
            text/plain:
              content:
                default: "ok"
# END STATUS

components:
  schemas:
# UPLOAD
    uploadForm:
      type: object
      properties:
        file:
          type: string
          format: binary

    uploadOk:
      type: object
      properties:
        status:
          type: string
          default: "ok"
        description:
          type: string
          default: "saved"
        id:
          type: integer
          required: true
        name:
          type: string
          required: true
# END UPLOAD

    serverError:
      type: object
      status:
        type: string
        default: "error"
      error:
        type: object
        properties:
          code:
            type: integer
          explain:
            type: string

  securitySchemes:
    apiKey:
      description: Cookie-based api authorization key
      type: API key
      name: api-key
      in: header