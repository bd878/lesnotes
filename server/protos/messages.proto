syntax = "proto3";

package messages.v1;

option go_package = "github.com/bd878/gallery/server/api";

service Messages {
	rpc GetServers(GetServersRequest) returns (GetServersResponse) {}
	rpc SaveMessage(SaveMessageRequest) returns (SaveMessageResponse) {}
	rpc DeleteMessage(DeleteMessageRequest) returns (DeleteMessageResponse) {}
	rpc DeleteMessages(DeleteMessagesRequest) returns (DeleteMessagesResponse) {}
	rpc DeleteAllUserMessages(DeleteAllUserMessagesRequest) returns (DeleteAllUserMessagesResponse) {}
	rpc PublishMessages(PublishMessagesRequest) returns (PublishMessagesResponse) {}
	rpc PrivateMessages(PrivateMessagesRequest) returns (PrivateMessagesResponse) {}
	rpc UpdateMessage(UpdateMessageRequest) returns (UpdateMessageResponse) {}
	rpc ReadOneMessage(ReadOneMessageRequest) returns (Message) {}
	rpc ReadAllMessages(ReadMessagesRequest) returns (ReadMessagesResponse) {}
	rpc ReadThreadMessages(ReadThreadMessagesRequest) returns (ReadThreadMessagesResponse) {}
}

message Message {
	int64    id = 1;
	int64    user_id = 2;
	int64    create_utc_nano = 3;
	int64    update_utc_nano = 4;
	string   text = 5;
	int64    file_id = 7;
	int64    thread_id = 8;
	bool     private = 9;
	string   name = 10;
}

message ReadThreadMessagesRequest {
	int64    user_id = 1;
	int64    thread_id = 2;
	int32    offset = 3;
	int32    limit = 4;
	bool     asc = 5;
	int32    private = 6;
}

message ReadThreadMessagesResponse {
	repeated Message messages = 1;
	bool             is_last_page = 2;
}

message ReadMessagesRequest {
	int64    user_id = 1;
	int32    offset = 2;
	int32    limit = 3;
	bool     asc = 4;
	int32    private = 5;
}

message ReadMessagesResponse {
	repeated Message messages = 1;
	bool             is_last_page = 2;
}

message UpdateMessageRequest {
	int64    id = 1;
	int64    user_id = 2;
	int64    file_id = 3;
	int64    thread_id = 4;
	string   text = 5;
	int32    private = 6;
}

message UpdateMessageResponse {
	int64    update_utc_nano = 1;
	bool     private = 2;
}

message SaveMessageRequest {
	Message  message = 1;
}

message SaveMessageResponse {
	int64    id = 1;
	int64    create_utc_nano = 2;
	int64    update_utc_nano = 3;
	bool     private = 4;
	string   name = 5;
}

message DeleteAllUserMessagesRequest {
	int64    user_id = 1;
}

message DeleteAllUserMessagesResponse {}

message DeleteMessageRequest {
	int64    id = 1;
	int64    user_id = 2;
}

message DeleteMessagesRequest {
	repeated int64  ids = 1;
	int64 user_id = 2;
}

message PublishMessagesRequest {
	repeated int64 ids = 1;
	int64 user_id = 2;
}

message PublishMessagesResponse {
	int64    update_utc_nano = 1;
}

message PrivateMessagesRequest {
	repeated int64 ids = 1;
	int64 user_id = 2;
}

message PrivateMessagesResponse {
	int64    update_utc_nano = 1;
}

message DeleteMessageResponse {}

message DeleteMessageStatus {
	int64 id = 1;
	bool ok = 2;
	string explain = 3;
}

message DeleteMessagesResponse {
	repeated DeleteMessageStatus ids = 1;
}

message GetServersRequest {}

message GetServersResponse {
	repeated Server servers = 3;
}

message Server {
	string id = 1;
	string raft_addr = 2;
	bool   is_leader = 3;
}

message ReadOneMessageRequest {
	int64  id = 1;
	repeated int64  user_ids = 2;
}